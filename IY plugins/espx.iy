--[[
Configurable highlight/hitboxesp/tracers
using example
espx 0 1 1 1 1 0 1 0 0.4 1 1 0.5 1 0 0.6 1 1 1 1 
espx 0 1 1 1 1 0 0 1 0 0 0 0 1 0 0 0 0 1 1 0 0 
unespx
or just
espx
unespx
]]
--[[
Explanation of the arguments:

args[1] – Outline Transparency for Highlight:
  A numeric value between 0 and 1 (0 – completely opaque, 1 – completely transparent). Default: 0.

args[2] – Depth Mode for Highlight:
  If 1 – AlwaysOnTop mode (default); if 0 – Occluded mode.

args[3] – Fill Transparency for Highlight:
  A numeric value between 0 and 1. If the value is less than 1, the fill will be visible 
  (FillColor is set according to the player's team color). Default: 1 (i.e. no fill).

args[4] – Use BillboardGui:
  If 1 – create a BillboardGui above players (and disable the default name display);
  If 0 – no BillboardGui is created; the default name display remains, but the Highlight is still shown.
  Default: 1.

args[5] – Billboard AlwaysOnTop (for the BillboardGui created by this script):
  If 1 – the BillboardGui will be displayed on top of everything (through walls, etc.);
  If 0 – the BillboardGui will not be displayed on top of everything.
  Default: 1.

args[6] – Show Notifications:
  If 1 – notifications are shown;
  If 0 – notifications are not shown.
  Default: 0.

args[7] – Hitbox Highlighting:
  If 1 – all hitboxes (those included in the whitelist) are highlighted;
  If 0 – not highlighted.
  Default: 0.

args[8] – Hitbox AlwaysOnTop:
  If 1 – hitbox adornments will be visible through walls;
  If 0 – they will not be visible through walls.
  Default: 1.

args[9] – Hitbox Highlight Transparency:
  A numeric value between 0 and 1, default: 0.3.

args[10] – Use Custom Colors for Hitboxes:
  If 1 – for each part, the color set in the settings is used;
  If 0 – the player's team color is used.
  Default: 0.

args[11] – Effects Affect the Local Player:
  If 1 – effects are also applied to the local player;
  If 0 – effects are NOT applied to the local player.
  Default: 0.

args[12] – Transparency for all text elements and healthbar created by the BillboardGui (ESP):
  If specified – set the transparency (TextTransparency, TextStrokeTransparency, etc.)
  for text elements and the healthbar to args[12]. Default: 0.5.
  The BackgroundTransparency of text objects remains 1 (fully transparent).

args[13] – Control of Other BillboardGuis (not created by this script):
  If 0 – disable all BillboardGuis on target characters that were not created by this script.
  Default: 1 (do not disable).

args[14] – Billboard AlwaysOnTop for other BillboardGuis on target characters:
  If 1 – other BillboardGuis (not created by this script) on target characters will be displayed on top of everything,
       and MaxDistance will be set to 999999 for them.
  Default: 0.

args[15] – Transparency for other text elements and healthbar in BillboardGuis (not created by this script):
  If specified – set the transparency (TextTransparency, TextStrokeTransparency, etc.)
  for text elements to args[15]. Default: 0.
  BackgroundTransparency remains unchanged.

args[16] – Tracers:
  If 1 – tracers to target players are enabled;
  If 0 – disabled.
  Default: 0.

args[17] – Tracers Through Walls:
  If 1 – tracers are visible on top of everything (through walls);
  If 0 – they are not visible through walls (using raycast check).
  Default: 0.

args[18] – Tracer Starting Point:
  1 = the tracer is drawn from the local player's HumanoidRootPart;
  0 = from the mouse cursor;
  2 = from the bottom center of the screen.
  Default: 1.

args[19] – Fixed Size BillboardGui:
  If 1 – the size of the BillboardGui will not change with distance;
  If 0 – the size will change.
  Default: 1.

args[20] – Target Player Models on Top:         (does not work)
  If 1 – target characters (R6/R15 models) are visible on top of everything (through walls);
  If 0 – standard display.
  Default: 0.

args[21] – Tracers Only if the Target is in the Camera’s View:   (does not work)
  If 1 – the tracer is drawn only if the target player is in the field of view (on screen);
  If 0 – the tracer is drawn even if the player is off-screen.
  Default: 0.
]]

-------------------------------
-- Глобальні змінні та конфігурація
-------------------------------
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local camera = Workspace.CurrentCamera

local Active = false
local ScriptDisabled = false

-- Таблиця кастомних кольорів для hitbox’ів (change hitbox colors there)
local customColors = {
    Head = Color3.fromRGB(255, 255, 255),
    Torso = Color3.fromRGB(255, 0, 0),
    UpperTorso = Color3.fromRGB(255, 0, 0),
    LowerTorso = Color3.fromRGB(255, 0, 0),
    ["Left Arm"] = Color3.fromRGB(0, 255, 0),
    ["Right Arm"] = Color3.fromRGB(0, 255, 0),
    ["Left Leg"] = Color3.fromRGB(0, 0, 255),
    ["Right Leg"] = Color3.fromRGB(0, 0, 255),
    HumanoidRootPart = Color3.fromRGB(255, 255, 0),
    LeftUpperArm = Color3.fromRGB(0, 255, 0),
    LeftLowerArm = Color3.fromRGB(0, 255, 0),
    RightUpperArm = Color3.fromRGB(0, 255, 0),
    RightLowerArm = Color3.fromRGB(0, 255, 0),
    LeftUpperLeg = Color3.fromRGB(0, 0, 255),
    LeftLowerLeg = Color3.fromRGB(0, 0, 255),
    RightUpperLeg = Color3.fromRGB(0, 0, 255),
    RightLowerLeg = Color3.fromRGB(0, 0, 255)
}

-- Конфігураційні змінні (Change standart settings on str. 685-703 if you want)
local config = {
    outlineTransparency = 0,                           -- args[1]
    depthMode = Enum.HighlightDepthMode.AlwaysOnTop,     -- args[2] 
    fillTransparency = 1,                              -- args[3]
    useBillboard = 1,                                  -- args[4]
    billboardAlwaysOnTop = 1,                          -- args[5]
    showNotifications = 0,                             -- args[6]
    hitboxHighlight = 0,                               -- args[7]
    hitboxAlwaysOnTop = 1,                             -- args[8]
    hitboxTransparency = 0.3,                          -- args[9]
    useCustomHitboxColors = 0,                         -- args[10]
    affectLocal = 0,                                   -- args[11]
    billboardTransparency = 0.5,                         -- args[12]
    disableOtherBillboards = false,                    -- args[13] 
    otherBillboardAlwaysOnTop = 0,                     -- args[14]
    otherBillboardTransparency = 0,                    -- args[15]
    tracersEnabled = 0,                                -- args[16]
    tracerThroughWalls = 0,                            -- args[17]
    tracerStartMode = 1,                               -- args[18]
    billboardScalingFixed = 1,                         -- args[19]
    modelsAlwaysOnTop = 0,                             -- args[20]
    tracerVisibleOnlyWhenOnScreen = 0                  -- args[21]
}


local hitboxWhitelist = {
    ["Head"] = true,
    ["Torso"] = true,
    ["UpperTorso"] = true,
    ["LowerTorso"] = true,
    ["Left Arm"] = true,
    ["Right Arm"] = true,
    ["Left Leg"] = true,
    ["Right Leg"] = true,
    ["HumanoidRootPart"] = true,
    ["LeftUpperArm"] = true,
    ["LeftLowerArm"] = true,
    ["RightUpperArm"] = true,
    ["RightLowerArm"] = true,
    ["LeftUpperLeg"] = true,
    ["LeftLowerLeg"] = true,
    ["RightUpperLeg"] = true,
    ["RightLowerLeg"] = true
}

-------------------------------
-- Функція для отримання контрастного кольору для обводки тексту
-------------------------------
local function getStrokeColor(color)
    local brightness = (color.R + color.G + color.B) / 3

    if brightness > 0.5 then
        return Color3.new(0, 0, 0)
    else
        return Color3.new(1, 1, 1)
    end
end

-------------------------------
-- Функції повідомлень
-------------------------------
local function showNotification(message)
    if config.showNotifications == 1 then
        game.StarterGui:SetCore("SendNotification", {
            Title = "SS Script",
            Text = message,
            Duration = 2
        })
    end
end

-------------------------------
-- Функції для стандартного відображення імен
-------------------------------
local function disableDisplayName(player)
    local char = player.Character
    if char then
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
        end
    end
end

local function enableDisplayName(player)
    local char = player.Character
    if char then
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.Viewer
        end
    end
end

-------------------------------
-- Функції для створення та оновлення BillboardGui, створених цим скриптом
-------------------------------
local function createBillboard(player)
    local char = player.Character
    if char and char:FindFirstChild("Head") then
        local head = char.Head
        if not head:FindFirstChild("PlayerMarker") then
            local billboard = Instance.new("BillboardGui")
            billboard.Name = "PlayerMarker"
            billboard.Adornee = head

            billboard.Size = UDim2.new(4, 0, 1.5, 0)
            billboard.StudsOffset = Vector3.new(0, 2, 0)
            billboard.AlwaysOnTop = (config.billboardAlwaysOnTop == 1)
            billboard.Parent = head
            
            local frame = Instance.new("Frame")
            frame.Size = UDim2.new(1, 0, 1, 0)
            frame.BackgroundTransparency = 1 
            frame.Parent = billboard
            
            local displayNameLabel = Instance.new("TextLabel")
            displayNameLabel.Size = UDim2.new(1, 0, 0.3, 0)
            displayNameLabel.Position = UDim2.new(0, 0, 0, 0)
            displayNameLabel.BackgroundTransparency = 1
            displayNameLabel.Text = player.DisplayName
            displayNameLabel.TextColor3 = player.TeamColor.Color
            displayNameLabel.TextStrokeColor3 = getStrokeColor(player.TeamColor.Color)
            displayNameLabel.TextTransparency = config.billboardTransparency
            displayNameLabel.TextStrokeTransparency = config.billboardTransparency
            displayNameLabel.TextScaled = true
            displayNameLabel.Font = Enum.Font.SourceSansBold
            displayNameLabel.Parent = frame
            
            local usernameLabel = Instance.new("TextLabel")
            usernameLabel.Size = UDim2.new(1, 0, 0.3, 0)
            usernameLabel.Position = UDim2.new(0, 0, 0.21, 0)
            usernameLabel.BackgroundTransparency = 1
            usernameLabel.Text = "@" .. player.Name
            usernameLabel.TextColor3 = player.TeamColor.Color
            usernameLabel.TextStrokeColor3 = getStrokeColor(player.TeamColor.Color)
            usernameLabel.TextTransparency = config.billboardTransparency
            usernameLabel.TextStrokeTransparency = config.billboardTransparency
            usernameLabel.TextScaled = true
            usernameLabel.Font = Enum.Font.SourceSans
            usernameLabel.Parent = frame
            
            local healthBarBackground = Instance.new("Frame")
            healthBarBackground.Size = UDim2.new(0.8, 0, 0.15, 0)
            healthBarBackground.Position = UDim2.new(0.1, 0, 0.51, 0)
            healthBarBackground.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            healthBarBackground.BorderSizePixel = 0
            healthBarBackground.BackgroundTransparency = 1
            healthBarBackground.Parent = frame
            
            local healthBar = Instance.new("Frame")
            healthBar.Name = "HealthBar"
            healthBar.Size = UDim2.new(1, 0, 1, 0)
            healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
            healthBar.BorderSizePixel = 0
            healthBar.BackgroundTransparency = config.billboardTransparency
            healthBar.Parent = healthBarBackground
            
            local healthLabel = Instance.new("TextLabel")
            healthLabel.Name = "HealthLabel"
            healthLabel.Size = UDim2.new(1, 0, 1, 0)
            healthLabel.BackgroundTransparency = 1
            healthLabel.TextSize = 12
            --healthLabel.TextScaled = true
            healthLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
            healthLabel.TextStrokeColor3 = Color3.new(1, 1, 1)
            healthLabel.TextTransparency = config.billboardTransparency
            healthLabel.TextStrokeTransparency = config.billboardTransparency
            healthLabel.Font = Enum.Font.SourceSansBold
            healthLabel.Parent = healthBar
        end
    end
end

local function removeBillboard(player)
    local char = player.Character
    if char and char:FindFirstChild("Head") then
        local marker = char.Head:FindFirstChild("PlayerMarker")
        if marker then
            marker:Destroy()
        end
    end
end

local function updateHealth(player)
    local char = player.Character
    if char and char:FindFirstChild("Humanoid") and char:FindFirstChild("Head") then
        local humanoid = char.Humanoid
        local head = char.Head
        local billboard = head:FindFirstChild("PlayerMarker")
        if billboard then
            local frame = billboard:FindFirstChildOfClass("Frame")
            if frame then
                local healthBarBackground = frame:FindFirstChildOfClass("Frame")
                if healthBarBackground then
                    local healthBar = healthBarBackground:FindFirstChild("HealthBar")
                    local healthLabel = healthBar and healthBar:FindFirstChild("HealthLabel")
                    if healthBar and healthLabel then
                        local healthRatio = humanoid.Health / humanoid.MaxHealth
                        healthBar.Size = UDim2.new(healthRatio, 0, 1, 0)
                        healthLabel.Text = math.floor(humanoid.Health) .. " / " .. math.floor(humanoid.MaxHealth)
                        if healthRatio > 0.5 then
                            healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                        elseif healthRatio > 0.2 then
                            healthBar.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
                        else
                            healthBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                        end
                    end
                end
            end
        end
    end
end

-- Функція для коригування розміру BillboardGui згідно з args[19]
local function updateBillboardScaling(player)
    local char = player.Character
    if char and char:FindFirstChild("Head") then
        local marker = char.Head:FindFirstChild("PlayerMarker")
        if marker then
            if config.billboardScalingFixed == 1 then

                marker.Size = UDim2.fromOffset(200, 50)
            else

                marker.Size = UDim2.new(4, 0, 1.5, 0)
            end
        end
    end
end

-------------------------------
-- Функції для створення та оновлення Highlight
-------------------------------
local function createOrUpdateHighlight(player)
    local char = player.Character
    if char then
        local highlight = char:FindFirstChild("PlayerHighlight")
        if not highlight then
            highlight = Instance.new("Highlight")
            highlight.Name = "PlayerHighlight"
            highlight.Parent = char
        end
        highlight.OutlineTransparency = config.outlineTransparency

        if config.modelsAlwaysOnTop == 1 then
            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        else
            highlight.DepthMode = config.depthMode
        end
        highlight.FillTransparency = config.fillTransparency
        highlight.OutlineColor = player.TeamColor.Color
        if config.fillTransparency < 1 then
            highlight.FillColor = player.TeamColor.Color
        end
    end
end

local function removeHighlight(player)
    local char = player.Character
    if char then
        local highlight = char:FindFirstChild("PlayerHighlight")
        if highlight then
            highlight:Destroy()
        end
    end
end

-------------------------------
-- Функції для підсвічування hitbox’ів за допомогою BoxHandleAdornment
-------------------------------
local function updateHitboxHighlight(player)
    local char = player.Character
    if char then
        for _, part in pairs(char:GetDescendants()) do
            if part:IsA("BasePart") and hitboxWhitelist[part.Name] then
                local adorn = part:FindFirstChild("HitboxHighlight")
                if not adorn then
                    adorn = Instance.new("BoxHandleAdornment")
                    adorn.Name = "HitboxHighlight"
                    adorn.Adornee = part
                    adorn.Parent = part
                end
                adorn.AlwaysOnTop = (config.hitboxAlwaysOnTop == 1)
                adorn.ZIndex = 10
                adorn.Size = part.Size + Vector3.new(0.001, 0.001, 0.001)
                adorn.Transparency = config.hitboxTransparency
                if config.useCustomHitboxColors == 1 then
                    local c = customColors[part.Name]
                    adorn.Color3 = c or player.TeamColor.Color
                else
                    adorn.Color3 = player.TeamColor.Color
                end
            end
        end
    end
end

local function removeHitboxHighlights(player)
    local char = player.Character
    if char then
        for _, part in pairs(char:GetDescendants()) do
            if part:IsA("BasePart") then
                local adorn = part:FindFirstChild("HitboxHighlight")
                if adorn then
                    adorn:Destroy()
                end
            end
        end
    end
end

-------------------------------
-- Функції для оновлення інших BillboardGui (не створених цим скриптом)
-- Застосовуються лише до цільових персонажів
-------------------------------
local function updateOtherBillboards(player)
    local char = player.Character
    if char then
        for _, v in pairs(char:GetDescendants()) do
            if v:IsA("BillboardGui") and v.Name ~= "PlayerMarker" then

                v.Enabled = not config.disableOtherBillboards

                if config.otherBillboardAlwaysOnTop == 1 then
                    v.AlwaysOnTop = true
                    v.MaxDistance = 999999
                end

                for _, descendant in ipairs(v:GetDescendants()) do
                    if descendant:IsA("TextLabel") or descendant:IsA("TextButton") then
                        descendant.TextTransparency = config.otherBillboardTransparency
                        descendant.TextStrokeTransparency = config.otherBillboardTransparency

                    end
                end
            end
        end
    end
end

local function restoreOtherBillboards(player)
    local char = player.Character
    if char then
        for _, v in pairs(char:GetDescendants()) do
            if v:IsA("BillboardGui") and v.Name ~= "PlayerMarker" then
                v.Enabled = true
            end
        end
    end
end

-------------------------------
-- Трейсери (Tracers)
-------------------------------

local tracers = {}
local tracerConnection


local function startTracerLoop()

    if tracerConnection then tracerConnection:Disconnect() end
    tracerConnection = RunService.RenderStepped:Connect(function()
        for _, player in pairs(Players:GetPlayers()) do
            if player == LocalPlayer then

                continue
            end
            local char = player.Character
            if char and char:FindFirstChild("Humanoid") and char:FindFirstChild("HumanoidRootPart") and (char.Humanoid.Health > 0) then
                local hrp = char.HumanoidRootPart
                local targetScreenPos, onScreen = camera:WorldToViewportPoint(hrp.Position)
                local targetPos2D = Vector2.new(targetScreenPos.X, targetScreenPos.Y)
                

                local startPos = nil
                if config.tracerStartMode == 1 then
                    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        local lpPos = camera:WorldToViewportPoint(LocalPlayer.Character.HumanoidRootPart.Position)
                        startPos = Vector2.new(lpPos.X, lpPos.Y)
                    else
                        startPos = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                    end
                elseif config.tracerStartMode == 0 then
                    local mouse = LocalPlayer:GetMouse()
                    startPos = Vector2.new(mouse.X, mouse.Y)
                elseif config.tracerStartMode == 2 then
                    startPos = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                end
                

                local visibleByRay = true
                if config.tracerThroughWalls == 0 then
                    local rayOrigin = camera.CFrame.Position
                    local rayDirection = (hrp.Position - rayOrigin)
                    local raycastParams = RaycastParams.new()
                    raycastParams.FilterDescendantsInstances = {LocalPlayer.Character}
                    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                    local rayResult = Workspace:Raycast(rayOrigin, rayDirection, raycastParams)
                    if rayResult and not rayResult.Instance:IsDescendantOf(char) then
                        visibleByRay = false
                    end
                end
                

                local tracer = tracers[player]
                if not tracer then
                    tracer = Drawing.new("Line")
                    tracer.Thickness = 2
                    tracer.Color = player.TeamColor.Color
                    tracer.Visible = false
                    tracers[player] = tracer
                else
                    tracer.Color = player.TeamColor.Color
                end
                

                if config.tracerVisibleOnlyWhenOnScreen == 1 and (not onScreen) then
                    tracer.Visible = false
                else
                    tracer.Visible = onScreen and visibleByRay
                end
                
                tracer.From = startPos
                tracer.To = targetPos2D
            else

                if tracers[player] then
                    tracers[player].Visible = false
                end
            end
        end
    end)
end


Players.PlayerRemoving:Connect(function(player)
    if tracers[player] then
        tracers[player]:Remove()
        tracers[player] = nil
    end
end)

-------------------------------
-- Функції для перевірки гравців (основний цикл)
-------------------------------
local function checkPlayers()
    while Active do
        for _, player in pairs(Players:GetPlayers()) do
            if player == LocalPlayer and config.affectLocal == 0 then
                continue
            end
            local char = player.Character
            if char and char:FindFirstChild("Head") then
                if config.useBillboard == 1 then
                    if not char.Head:FindFirstChild("PlayerMarker") then
                        createBillboard(player)
                        disableDisplayName(player)
                    end
                    updateHealth(player)
                    updateBillboardScaling(player)
                else
                    removeBillboard(player)
                    enableDisplayName(player)
                end
                createOrUpdateHighlight(player)
                if config.hitboxHighlight == 1 then
                    updateHitboxHighlight(player)
                else
                    removeHitboxHighlights(player)
                end
                updateOtherBillboards(player)
            end
        end
        wait(0.2)
    end
    for _, player in pairs(Players:GetPlayers()) do
        removeBillboard(player)
        removeHighlight(player)
        removeHitboxHighlights(player)
        restoreOtherBillboards(player)
        enableDisplayName(player)
    end
end

-------------------------------
-- Глобальна функція для відключення ESP
-------------------------------
function disableespb5XGEN(silent)
    Active = false
    ScriptDisabled = true
    for _, player in pairs(Players:GetPlayers()) do
        removeBillboard(player)
        removeHighlight(player)
        removeHitboxHighlights(player)
        restoreOtherBillboards(player)
        enableDisplayName(player)
    end

    if tracerConnection then
        tracerConnection:Disconnect()
        tracerConnection = nil
    end

    for player, tracer in pairs(tracers) do
        tracer:Remove()
        tracers[player] = nil
    end
    if not silent then
        showNotification("ESP Disabled")
    end
end

-------------------------------
-- Плагін
-------------------------------
local Plugin = {
    ["PluginName"] = "",
    ["PluginDescription"] = "billboard esp",
    ["Commands"] = {
        ["espx"] = {
            ["ListName"] = "espb5",
            ["Description"] = "billboard esp",
            ["Aliases"] = {},
            ["Function"] = function(args, speaker)
                disableespb5XGEN(true)

                config.outlineTransparency = args[1] and tonumber(args[1]) or 0
                if args[2] then
                    if tonumber(args[2]) == 0 then
                        config.depthMode = Enum.HighlightDepthMode.Occluded
                    else
                        config.depthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    end
                else
                    config.depthMode = Enum.HighlightDepthMode.AlwaysOnTop
                end
                --CONFIG STANDART SETTINGS THERE
                config.fillTransparency = args[3] and tonumber(args[3]) or 1
                config.useBillboard = args[4] and tonumber(args[4]) or 1
                config.billboardAlwaysOnTop = args[5] and tonumber(args[5]) or 1
                config.showNotifications = args[6] and tonumber(args[6]) or 0
                config.hitboxHighlight = args[7] and tonumber(args[7]) or 0
                config.hitboxAlwaysOnTop = args[8] and tonumber(args[8]) or 1
                config.hitboxTransparency = args[9] and tonumber(args[9]) or 0.3
                config.useCustomHitboxColors = args[10] and tonumber(args[10]) or 0
                config.affectLocal = args[11] and tonumber(args[11]) or 0
                config.billboardTransparency = args[12] and tonumber(args[12]) or 0.5
                config.disableOtherBillboards = (args[13] and tonumber(args[13]) == 0) and true or false
                config.otherBillboardAlwaysOnTop = args[14] and tonumber(args[14]) or 0
                config.otherBillboardTransparency = args[15] and tonumber(args[15]) or 0
                config.tracersEnabled = args[16] and tonumber(args[16]) or 0
                config.tracerThroughWalls = args[17] and tonumber(args[17]) or 0
                config.tracerStartMode = args[18] and tonumber(args[18]) or 1
                config.billboardScalingFixed = args[19] and tonumber(args[19]) or 1
                config.modelsAlwaysOnTop = args[20] and tonumber(args[20]) or 0
                config.tracerVisibleOnlyWhenOnScreen = args[21] and tonumber(args[21]) or 0

                Active = true
                ScriptDisabled = false
                spawn(checkPlayers)
                if config.tracersEnabled == 1 then
                    startTracerLoop()
                end
                showNotification("ESP Enabled")
            end
        },
        ["unespx"] = {
            ["ListName"] = "unespx",
            ["Description"] = "Disable billboard esp",
            ["Aliases"] = {},
            ["Function"] = function(args, speaker)
                disableespb5XGEN()
            end
        }
    }
}

return Plugin