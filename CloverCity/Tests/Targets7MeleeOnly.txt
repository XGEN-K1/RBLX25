local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Radius = 20
local Active = false
local ScriptDisabled = false
local inputConnection

local function createCircle(player)
    local char = player.Character
    if char and char:FindFirstChild("Head") then
        local head = char.Head
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "PlayerMarker"
        billboard.Adornee = head
        billboard.Size = UDim2.new(2, 0, 2, 0)
        billboard.AlwaysOnTop = true
        billboard.Parent = head
        
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(1, 0, 1, 0)
        frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        frame.BackgroundTransparency = 0.3
        frame.Parent = billboard
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(1, 0)
        corner.Parent = frame
    end
end

local function removeCircle(player)
    local char = player.Character
    if char and char:FindFirstChild("Head") then
        local marker = char.Head:FindFirstChild("PlayerMarker")
        if marker then
            marker:Destroy()
        end
    end
end

local function checkPlayers()
    while Active do
        local character = LocalPlayer.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            local rootPart = character.HumanoidRootPart
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer then
                    local char = player.Character
                    if char and char:FindFirstChild("HumanoidRootPart") then
                        local distance = (char.HumanoidRootPart.Position - rootPart.Position).Magnitude
                        if distance <= Radius then
                            if not char.Head:FindFirstChild("PlayerMarker") then
                                createCircle(player)
                            end
                        else
                            removeCircle(player)
                        end
                    end
                end
            end
        end
        wait(0.2)
    end
    for _, player in pairs(Players:GetPlayers()) do
        removeCircle(player)
    end
end

local function getMarkedPlayers()
    local markedPlayers = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local char = player.Character
            if char and char:FindFirstChild("Head") and char.Head:FindFirstChild("PlayerMarker") then
                table.insert(markedPlayers, player)
            end
        end
    end
    return markedPlayers
end

local function getValidTool(player)
    local char = workspace:FindFirstChild(player.Name)
    if char then
        for _, tool in pairs(char:GetChildren()) do
            if tool:IsA("Tool") and tool:FindFirstChild("MobileCharge") then
                return tool
            end
        end
    end
    return nil
end

local function attackTarget(player)
    local tool = getValidTool(player)
    if tool then
        local mobileCharge = tool:FindFirstChild("MobileCharge")
        if mobileCharge then
            mobileCharge:FireServer(true)
            mobileCharge:FireServer(false)
        end
    end
end

local function shootAtMarkedPlayers()
    while Active do
        for _, player in pairs(getMarkedPlayers()) do
            attackTarget(player)
        end
        wait(0.1)
    end
end

local function showNotification(message)
    game.StarterGui:SetCore("SendNotification", {
        Title = "SS Script",
        Text = message,
        Duration = 2
    })
end

inputConnection = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent or ScriptDisabled then return end
    if input.KeyCode == Enum.KeyCode.K then
        Active = not Active
        if Active then
            spawn(checkPlayers)
            spawn(shootAtMarkedPlayers)
            showNotification("SSOn")
        else
            showNotification("SSOff")
        end
    end
end)

_G.SSDestroy = function()
    Active = false
    ScriptDisabled = true
    
    for _, player in pairs(Players:GetPlayers()) do
        removeCircle(player)
    end

    if inputConnection then
        inputConnection:Disconnect()
        inputConnection = nil
    end

    _G.SSDestroy = nil
    showNotification("SSDestroyed")
end
